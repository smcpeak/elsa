---- stdout ----
---- START ----
// -*-c++-*-

int f()
{
  return 1;
}

void g()
{}

int hasTry(int x)
try {
  return 2+x;
}
catch (int z) {
  return ++z;
}

class C {
public:
  int m_x;
  int m_y;
public:
  C(int x);
  inline C(class C const &__other)
    : m_x(__other.m_x),
      m_y(__other.m_y)
  {}
  inline class C &operator=(/*m: class C & */ class C const &__other)
  {
    (*this).m_x = __other.m_x;
    (*this).m_y = __other.m_y;
    return *this;
  }
  inline ~C(/*m: class C & */)
  {}
};

C::C(int x)
try
  : m_x(x),
    m_y(0)
{
  x++;
}
catch (int y) {
  y++;
}

---- STOP ----
---- stderr ----
---- exit status ----
Exit 0
