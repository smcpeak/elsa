---- stdout ----
---- START ----
// -*-c++-*-
int global1;
int global2 = 2;
int globalArr[3] = {
  1,
  2,
  3
};
int g3 = 3;
int g4 = 4;

void f()
{
  int x = 1;
  int y = 2;
  int (*fnptr)(int /*anon*/, char /*anon*/) = 0;
}
class C {
public:
  int m_x;
  inline void g(/*m: class C & */ int /*anon*/)
  {
    void (C::*ptmFunc)(/*m: class C & */ int /*anon*/) = &C::g;
    int C::*ptmData = &C::m_x;
  }
  inline C()
  {}
  inline C(class C const &__other)
    : m_x(__other.m_x)
  {}
  inline class C &operator=(/*m: class C & */ class C const &__other)
  {
    (*this).m_x = __other.m_x;
    return *this;
  }
  inline ~C(/*m: class C & */)
  {}
};
---- STOP ----
---- stderr ----
---- exit status ----
Exit 0
